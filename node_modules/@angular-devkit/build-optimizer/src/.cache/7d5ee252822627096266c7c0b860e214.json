{"remainingRequest":"/home/mohamed/Jimmy/balNEO/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--3-1!/home/mohamed/Jimmy/balNEO/node_modules/rxjs/_esm2015/util/ArgumentOutOfRangeError.js","dependencies":[{"path":"/home/mohamed/Jimmy/balNEO/node_modules/rxjs/_esm2015/util/ArgumentOutOfRangeError.js","mtime":1513892921000},{"path":"/home/mohamed/Jimmy/balNEO/node_modules/cache-loader/dist/cjs.js","mtime":1520938639765},{"path":"/home/mohamed/Jimmy/balNEO/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1519266497000}],"contextDependencies":[],"result":["/**\n * An error thrown when an element was queried at a certain index of an\n * Observable, but no such index or position exists in that sequence.\n *\n * @see {@link elementAt}\n * @see {@link take}\n * @see {@link takeLast}\n *\n * @class ArgumentOutOfRangeError\n */\nexport class ArgumentOutOfRangeError extends Error {\n    constructor() {\n        const err = super('argument out of range');\n        this.name = err.name = 'ArgumentOutOfRangeError';\n        this.stack = err.stack;\n        this.message = err.message;\n    }\n}\n//# sourceMappingURL=ArgumentOutOfRangeError.js.map",null]}